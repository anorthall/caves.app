# Generated by Django 4.1.7 on 2023-03-17 18:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "privacy",
                    models.CharField(
                        choices=[
                            ("Default", "Default"),
                            ("Public", "Public"),
                            ("Private", "Private"),
                        ],
                        default="Default",
                        max_length=10,
                        verbose_name="Privacy settings",
                    ),
                ),
                ("cave_name", models.CharField(max_length=100)),
                ("cave_region", models.CharField(blank=True, max_length=100)),
                ("cave_country", models.CharField(blank=True, max_length=100)),
                (
                    "cave_url",
                    models.URLField(
                        blank=True,
                        help_text="A website, such as a Wikipedia page, giving more information on this cave.",
                        verbose_name="cave website",
                    ),
                ),
                ("start", models.DateTimeField(verbose_name="start time")),
                (
                    "end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="end time"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Sport", "Sport"),
                            ("Digging", "Digging"),
                            ("Survey", "Survey"),
                            ("Exploration", "Exploration"),
                            ("Aid climbing", "Aid climbing"),
                            ("Photography", "Photography"),
                            ("Training", "Training"),
                            ("Rescue", "Rescue"),
                        ],
                        default="Sport",
                        max_length=15,
                    ),
                ),
                (
                    "cavers",
                    models.CharField(
                        blank=True,
                        help_text="A list of cavers that were on this trip.",
                        max_length=200,
                    ),
                ),
                (
                    "clubs",
                    models.CharField(
                        blank=True,
                        help_text="A list of any caving clubs associated with this trip.",
                        max_length=100,
                    ),
                ),
                (
                    "expedition",
                    models.CharField(
                        blank=True,
                        help_text="A list of any expeditions associated with this trip.",
                        max_length=100,
                    ),
                ),
                (
                    "report_url",
                    models.URLField(
                        blank=True,
                        help_text="The URL of an externally hosted trip report, such as on an expedition website or a personal blog.",
                        verbose_name="trip report",
                    ),
                ),
                (
                    "added",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="trip added on"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="trip last updated"
                    ),
                ),
                (
                    "horizontal_dist",
                    models.IntegerField(
                        blank=True,
                        help_text="Horizontal distance covered.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(20000),
                        ],
                        verbose_name="horizontal distance",
                    ),
                ),
                (
                    "vert_dist_down",
                    models.IntegerField(
                        blank=True,
                        help_text="Distance descended on rope.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5000),
                        ],
                        verbose_name="rope descent distance",
                    ),
                ),
                (
                    "vert_dist_up",
                    models.IntegerField(
                        blank=True,
                        help_text="Distance ascended on rope.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5000),
                        ],
                        verbose_name="rope ascent distance",
                    ),
                ),
                (
                    "surveyed_dist",
                    models.IntegerField(
                        blank=True,
                        help_text="Distance surveyed.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(20000),
                        ],
                        verbose_name="surveyed distance",
                    ),
                ),
                (
                    "aid_dist",
                    models.IntegerField(
                        blank=True,
                        help_text="Distance covered by aid climbing.",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="aid climbing distance",
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
